¨1
oC:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Context\EquinoxContext.cs
	namespace 	
Equinox
 
. 
Infra 
. 
Data 
. 
Context $
{ 
public 

sealed 
class 
EquinoxContext &
:' (
	DbContext) 2
,2 3
IUnitOfWork4 ?
{ 
private 
readonly 
IMediatorHandler )
_mediatorHandler* :
;: ;
public 
EquinoxContext 
( 
DbContextOptions .
<. /
EquinoxContext/ =
>= >
options? F
,F G
IMediatorHandlerH X
mediatorHandlerY h
)h i
:j k
basel p
(p q
optionsq x
)x y
{ 	
_mediatorHandler 
= 
mediatorHandler .
;. /
ChangeTracker 
. !
QueryTrackingBehavior /
=0 1!
QueryTrackingBehavior2 G
.G H

NoTrackingH R
;R S
ChangeTracker 
. $
AutoDetectChangesEnabled 2
=3 4
false5 :
;: ;
} 	
public 
DbSet 
< 
Customer 
> 
	Customers (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Ignore 
<  
ValidationResult  0
>0 1
(1 2
)2 3
;3 4
modelBuilder 
. 
Ignore 
<  
Event  %
>% &
(& '
)' (
;( )
foreach   
(   
var   
property   !
in  " $
modelBuilder  % 1
.  1 2
Model  2 7
.  7 8
GetEntityTypes  8 F
(  F G
)  G H
.  H I

SelectMany  I S
(  S T
e!! 
=>!! 
e!! 
.!! 
GetProperties!! $
(!!$ %
)!!% &
.!!& '
Where!!' ,
(!!, -
p!!- .
=>!!/ 1
p!!2 3
.!!3 4
ClrType!!4 ;
==!!< >
typeof!!? E
(!!E F
string!!F L
)!!L M
)!!M N
)!!N O
)!!O P
property"" 
."" 
SetColumnType"" &
(""& '
$str""' 5
)""5 6
;""6 7
modelBuilder$$ 
.$$ 
ApplyConfiguration$$ +
($$+ ,
new$$, /
CustomerMap$$0 ;
($$; <
)$$< =
)$$= >
;$$> ?
base&& 
.&& 
OnModelCreating&&  
(&&  !
modelBuilder&&! -
)&&- .
;&&. /
}'' 	
public)) 
async)) 
Task)) 
<)) 
bool)) 
>)) 
Commit))  &
())& '
)))' (
{** 	
await11 
_mediatorHandler11 "
.11" #
PublishDomainEvents11# 6
(116 7
this117 ;
)11; <
.11< =
ConfigureAwait11= K
(11K L
false11L Q
)11Q R
;11R S
var55 
success55 
=55 
await55 
SaveChangesAsync55  0
(550 1
)551 2
>553 4
$num555 6
;556 7
return77 
success77 
;77 
}88 	
}99 
public;; 

static;; 
class;; 
MediatorExtension;; )
{<< 
public== 
static== 
async== 
Task==  
PublishDomainEvents==! 4
<==4 5
T==5 6
>==6 7
(==7 8
this==8 <
IMediatorHandler=== M
mediator==N V
,==V W
T==X Y
ctx==Z ]
)==] ^
where==_ d
T==e f
:==g h
	DbContext==i r
{>> 	
var?? 
domainEntities?? 
=??  
ctx??! $
.??$ %
ChangeTracker??% 2
.@@ 
Entries@@ 
<@@ 
Entity@@ 
>@@  
(@@  !
)@@! "
.AA 
WhereAA 
(AA 
xAA 
=>AA 
xAA 
.AA 
EntityAA $
.AA$ %
DomainEventsAA% 1
!=AA2 4
nullAA5 9
&&AA: <
xAA= >
.AA> ?
EntityAA? E
.AAE F
DomainEventsAAF R
.AAR S
AnyAAS V
(AAV W
)AAW X
)AAX Y
;AAY Z
varCC 
domainEventsCC 
=CC 
domainEntitiesCC -
.DD 

SelectManyDD 
(DD 
xDD 
=>DD  
xDD! "
.DD" #
EntityDD# )
.DD) *
DomainEventsDD* 6
)DD6 7
.EE 
ToListEE 
(EE 
)EE 
;EE 
domainEntitiesGG 
.GG 
ToListGG !
(GG! "
)GG" #
.HH 
ForEachHH 
(HH 
entityHH 
=>HH  "
entityHH# )
.HH) *
EntityHH* 0
.HH0 1
ClearDomainEventsHH1 B
(HHB C
)HHC D
)HHD E
;HHE F
varJJ 
tasksJJ 
=JJ 
domainEventsJJ $
.KK 
SelectKK 
(KK 
asyncKK 
(KK 
domainEventKK *
)KK* +
=>KK, .
{KK/ 0
awaitLL 
mediatorLL "
.LL" #
PublishEventLL# /
(LL/ 0
domainEventLL0 ;
)LL; <
;LL< =
}MM 
)MM 
;MM 
awaitOO 
TaskOO 
.OO 
WhenAllOO 
(OO 
tasksOO $
)OO$ %
;OO% &
}PP 	
}QQ 
}RR Ï
uC:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Context\EventStoreSQLContext.cs
	namespace 	
Equinox
 
. 
Infra 
. 
Data 
. 
Context $
{ 
public 

class  
EventStoreSqlContext %
:& '
	DbContext( 1
{		 
public

  
EventStoreSqlContext

 #
(

# $
DbContextOptions

$ 4
<

4 5 
EventStoreSqlContext

5 I
>

I J
options

K R
)

R S
:

T U
base

V Z
(

Z [
options

[ b
)

b c
{

d e
}

f g
public 
DbSet 
< 
StoredEvent  
>  !
StoredEvent" -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
StoredEventMap0 >
(> ?
)? @
)@ A
;A B
base 
. 
OnModelCreating  
(  !
modelBuilder! -
)- .
;. /
} 	
} 
} ü
tC:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\EventSourcing\SqlEventStore.cs
	namespace 	
Equinox
 
. 
Infra 
. 
Data 
. 
EventSourcing *
{		 
public

 

class

 
SqlEventStore

 
:

  
IEventStore

! ,
{ 
private 
readonly !
IEventStoreRepository .!
_eventStoreRepository/ D
;D E
private 
readonly 
IAspNetUser $
_user% *
;* +
public 
SqlEventStore 
( !
IEventStoreRepository 2 
eventStoreRepository3 G
,G H
IAspNetUserI T
userU Y
)Y Z
{ 	!
_eventStoreRepository !
=" # 
eventStoreRepository$ 8
;8 9
_user 
= 
user 
; 
} 	
public 
void 
Save 
< 
T 
> 
( 
T 
theEvent &
)& '
where( -
T. /
:0 1
Event2 7
{ 	
var 
serializedData 
=  
JsonConvert! ,
., -
SerializeObject- <
(< =
theEvent= E
)E F
;F G
var 
storedEvent 
= 
new !
StoredEvent" -
(- .
theEvent 
, 
serializedData 
, 
_user 
. 
Name 
?? 
_user #
.# $
GetUserEmail$ 0
(0 1
)1 2
)2 3
;3 4!
_eventStoreRepository   !
.  ! "
Store  " '
(  ' (
storedEvent  ( 3
)  3 4
;  4 5
}!! 	
}"" 
}## ®
mC:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Mappings\CustomerMap.cs
	namespace 	
Equinox
 
. 
Infra 
. 
Data 
. 
Mappings %
{ 
public 

class 
CustomerMap 
: $
IEntityTypeConfiguration 7
<7 8
Customer8 @
>@ A
{ 
public		 
void		 
	Configure		 
(		 
EntityTypeBuilder		 /
<		/ 0
Customer		0 8
>		8 9
builder		: A
)		A B
{

 	
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
Id$ &
)& '
. 
HasColumnName 
( 
$str #
)# $
;$ %
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
Name$ (
)( )
. 
HasColumnType 
( 
$str -
)- .
. 
HasMaxLength 
( 
$num !
)! "
. 

IsRequired 
( 
) 
; 
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
Email$ )
)) *
. 
HasColumnType 
( 
$str -
)- .
. 
HasMaxLength 
( 
$num !
)! "
. 

IsRequired 
( 
) 
; 
} 	
} 
} Õ

pC:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Mappings\StoredEventMap.cs
	namespace 	
Equinox
 
. 
Infra 
. 
Data 
. 
Mappings %
{ 
public 

class 
StoredEventMap 
:  !$
IEntityTypeConfiguration" :
<: ;
StoredEvent; F
>F G
{ 
public		 
void		 
	Configure		 
(		 
EntityTypeBuilder		 /
<		/ 0
StoredEvent		0 ;
>		; <
builder		= D
)		D E
{

 	
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
	Timestamp$ -
)- .
. 
HasColumnName 
( 
$str -
)- .
;. /
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
MessageType$ /
)/ 0
. 
HasColumnName 
( 
$str '
)' (
. 
HasColumnType 
( 
$str -
)- .
;. /
} 	
} 
} ª
zC:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Migrations\20161213130431_Initial.cs
	namespace 	
Equinox
 
. 
Infra 
. 
Data 
. 

Migrations '
{ 
public 

partial 
class 
Initial  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
CreateTable

 (
(

( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
nullable, 4
:4 5
false6 ;
); <
,< =
	BirthDate 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
nullable7 ?
:? @
falseA F
)F G
,G H
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 E
,E F
	maxLengthG P
:P Q
$numR T
,T U
nullableV ^
:^ _
false` e
)e f
,f g
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 D
,D E
	maxLengthF O
:O P
$numQ T
,T U
nullableV ^
:^ _
false` e
)e f
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
Id< >
)> ?
;? @
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str !
)! "
;" #
} 	
} 
} í
C:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Migrations\EquinoxContextModelSnapshot.cs
	namespace 	
Equinox
 
. 
Infra 
. 
Data 
. 

Migrations '
{ 
[		 
	DbContext		 
(		 
typeof		 
(		 
EquinoxContext		 $
)		$ %
)		% &
]		& '
partial

 
class

 '
EquinoxContextModelSnapshot

 -
:

. /
ModelSnapshot

0 =
{ 
	protected 
override 
void 

BuildModel  *
(* +
ModelBuilder+ 7
modelBuilder8 D
)D E
{ 	
modelBuilder 
. 
HasAnnotation 
( 
$str /
,/ 0
$str1 B
)B C
. 
HasAnnotation 
( 
$str B
,B C,
 SqlServerValueGenerationStrategyD d
.d e
IdentityColumne s
)s t
;t u
modelBuilder 
. 
Entity 
(  
$str  @
,@ A
bB C
=>D F
{ 
b 
. 
Property 
< 
Guid #
># $
($ %
$str% )
)) *
. 
ValueGeneratedOnAdd ,
(, -
)- .
. 
HasColumnName &
(& '
$str' +
)+ ,
;, -
b 
. 
Property 
< 
DateTime '
>' (
(( )
$str) 4
)4 5
;5 6
b 
. 
Property 
< 
string %
>% &
(& '
$str' .
). /
. 

IsRequired #
(# $
)$ %
. 
HasColumnType &
(& '
$str' 5
)5 6
. 
HasMaxLength %
(% &
$num& (
)( )
;) *
b 
. 
Property 
< 
string %
>% &
(& '
$str' -
)- .
.   

IsRequired   #
(  # $
)  $ %
.!! 
HasColumnType!! &
(!!& '
$str!!' 5
)!!5 6
."" 
HasMaxLength"" %
(""% &
$num""& )
)"") *
;""* +
b$$ 
.$$ 
HasKey$$ 
($$ 
$str$$ !
)$$! "
;$$" #
b&& 
.&& 
ToTable&& 
(&& 
$str&& )
)&&) *
;&&* +
}'' 
)'' 
;'' 
}(( 	
})) 
}** õ
C:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Migrations\EventStoreSQL\20161213130520_Initial.cs
	namespace 	
Equinox
 
. 
Infra 
. 
Data 
. 

Migrations '
.' (
EventStoreSQL( 5
{ 
public 

partial 
class 
Initial  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
CreateTable

 (
(

( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
nullable, 4
:4 5
false6 ;
); <
,< =
AggregateId 
=  !
table" '
.' (
Column( .
<. /
Guid/ 3
>3 4
(4 5
nullable5 =
:= >
false? D
)D E
,E F
Data 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
nullable0 8
:8 9
true: >
)> ?
,? @
Action 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 F
,F G
nullableH P
:P Q
trueR V
)V W
,W X
CreationDate  
=! "
table# (
.( )
Column) /
</ 0
DateTime0 8
>8 9
(9 :
nullable: B
:B C
falseD I
)I J
,J K
User 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
nullable0 8
:8 9
true: >
)> ?
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str #
)# $
;$ %
} 	
}   
}!! Ä
C:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Migrations\EventStoreSQL\EventStoreSQLContextModelSnapshot.cs
	namespace 	
Equinox
 
. 
Infra 
. 
Data 
. 

Migrations '
.' (
EventStoreSQL( 5
{ 
[		 
	DbContext		 
(		 
typeof		 
(		  
EventStoreSqlContext		 *
)		* +
)		+ ,
]		, -
partial

 
class

 -
!EventStoreSQLContextModelSnapshot

 3
:

4 5
ModelSnapshot

6 C
{ 
	protected 
override 
void 

BuildModel  *
(* +
ModelBuilder+ 7
modelBuilder8 D
)D E
{ 	
modelBuilder 
. 
HasAnnotation 
( 
$str /
,/ 0
$str1 B
)B C
. 
HasAnnotation 
( 
$str B
,B C,
 SqlServerValueGenerationStrategyD d
.d e
IdentityColumne s
)s t
;t u
modelBuilder 
. 
Entity 
(  
$str  H
,H I
bJ K
=>L N
{ 
b 
. 
Property 
< 
Guid #
># $
($ %
$str% )
)) *
. 
ValueGeneratedOnAdd ,
(, -
)- .
;. /
b 
. 
Property 
< 
Guid #
># $
($ %
$str% 2
)2 3
;3 4
b 
. 
Property 
< 
string %
>% &
(& '
$str' -
)- .
;. /
b 
. 
Property 
< 
string %
>% &
(& '
$str' 4
)4 5
. 
HasColumnName &
(& '
$str' /
)/ 0
. 
HasColumnType &
(& '
$str' 5
)5 6
;6 7
b 
. 
Property 
< 
DateTime '
>' (
(( )
$str) 4
)4 5
.   
HasColumnName   &
(  & '
$str  ' 5
)  5 6
;  6 7
b"" 
."" 
Property"" 
<"" 
string"" %
>""% &
(""& '
$str""' -
)""- .
;"". /
b$$ 
.$$ 
HasKey$$ 
($$ 
$str$$ !
)$$! "
;$$" #
b&& 
.&& 
ToTable&& 
(&& 
$str&& +
)&&+ ,
;&&, -
}'' 
)'' 
;'' 
}(( 	
})) 
}**  
vC:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Repository\CustomerRepository.cs
	namespace

 	
Equinox


 
.

 
Infra

 
.

 
Data

 
.

 

Repository

 '
{ 
public 

class 
CustomerRepository #
:$ %
ICustomerRepository& 9
{ 
	protected 
readonly 
EquinoxContext )
Db* ,
;, -
	protected 
readonly 
DbSet  
<  !
Customer! )
>) *
DbSet+ 0
;0 1
public 
CustomerRepository !
(! "
EquinoxContext" 0
context1 8
)8 9
{ 	
Db 
= 
context 
; 
DbSet 
= 
Db 
. 
Set 
< 
Customer #
># $
($ %
)% &
;& '
} 	
public 
IUnitOfWork 

UnitOfWork %
=>& (
Db) +
;+ ,
public 
async 
Task 
< 
Customer "
>" #
GetById$ +
(+ ,
Guid, 0
id1 3
)3 4
{ 	
return 
await 
DbSet 
. 
	FindAsync (
(( )
id) +
)+ ,
;, -
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Customer& .
>. /
>/ 0
GetAll1 7
(7 8
)8 9
{ 	
return   
await   
DbSet   
.   
ToListAsync   *
(  * +
)  + ,
;  , -
}!! 	
public## 
async## 
Task## 
<## 
Customer## "
>##" #

GetByEmail##$ .
(##. /
string##/ 5
email##6 ;
)##; <
{$$ 	
return%% 
await%% 
DbSet%% 
.%% 
AsNoTracking%% +
(%%+ ,
)%%, -
.%%- .
FirstOrDefaultAsync%%. A
(%%A B
c%%B C
=>%%D F
c%%G H
.%%H I
Email%%I N
==%%O Q
email%%R W
)%%W X
;%%X Y
}&& 	
public(( 
void(( 
Add(( 
((( 
Customer((  
customer((! )
)(() *
{)) 	
DbSet** 
.** 
Add** 
(** 
customer** 
)** 
;** 
}++ 	
public-- 
void-- 
Update-- 
(-- 
Customer-- #
customer--$ ,
)--, -
{.. 	
DbSet// 
.// 
Update// 
(// 
customer// !
)//! "
;//" #
}00 	
public22 
void22 
Remove22 
(22 
Customer22 #
customer22$ ,
)22, -
{33 	
DbSet44 
.44 
Remove44 
(44 
customer44 !
)44! "
;44" #
}55 	
public77 
void77 
Dispose77 
(77 
)77 
{88 	
Db99 
.99 
Dispose99 
(99 
)99 
;99 
}:: 	
};; 
}<< ­
C:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Repository\EventSourcing\EventStoreSQLRepository.cs
	namespace		 	
Equinox		
 
.		 
Infra		 
.		 
Data		 
.		 

Repository		 '
.		' (
EventSourcing		( 5
{

 
public 

class #
EventStoreSqlRepository (
:) *!
IEventStoreRepository+ @
{ 
private 
readonly  
EventStoreSqlContext -
_context. 6
;6 7
public #
EventStoreSqlRepository &
(& ' 
EventStoreSqlContext' ;
context< C
)C D
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IList 
<  
StoredEvent  +
>+ ,
>, -
All. 1
(1 2
Guid2 6
aggregateId7 B
)B C
{ 	
return 
await 
( 
from 
e  
in! #
_context$ ,
., -
StoredEvent- 8
where9 >
e? @
.@ A
AggregateIdA L
==M O
aggregateIdP [
select\ b
ec d
)d e
.e f
ToListAsyncf q
(q r
)r s
;s t
} 	
public 
void 
Store 
( 
StoredEvent %
theEvent& .
). /
{ 	
_context 
. 
StoredEvent  
.  !
Add! $
($ %
theEvent% -
)- .
;. /
_context 
. 
SaveChanges  
(  !
)! "
;" #
} 	
public 
void 
Dispose 
( 
) 
{   	
_context!! 
.!! 
Dispose!! 
(!! 
)!! 
;!! 
}"" 	
}## 
}$$ Ú
C:\Users\user\Desktop\SonarQube_Learning\EquinoxProject-master\src\Equinox.Infra.Data\Repository\EventSourcing\IEventStoreRepository.cs
	namespace 	
Equinox
 
. 
Infra 
. 
Data 
. 

Repository '
.' (
EventSourcing( 5
{ 
public 

	interface !
IEventStoreRepository *
:+ ,
IDisposable- 8
{		 
void

 
Store

 
(

 
StoredEvent

 
theEvent

 '
)

' (
;

( )
Task 
< 
IList 
< 
StoredEvent 
> 
>  
All! $
($ %
Guid% )
aggregateId* 5
)5 6
;6 7
} 
} 